/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Snap,
  ERC20SnapInterface,
} from "../../../token presets/ERC20/ERC20Snap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f455243323020536e617073686f740000000000000000000000000000000000008152506040518060400160405280600681526020017f4552433230730000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000197565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b057607f821691505b60208210811415620001c757620001c662000168565b5b50919050565b611d1d80620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634ee2cd7e1161008c578063981b24d011610066578063981b24d014610273578063a457c2d7146102a3578063a9059cbb146102d3578063dd62ed3e14610303576100ea565b80634ee2cd7e146101f557806370a082311461022557806395d89b4114610255576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610333565b604051610104919061137d565b60405180910390f35b61012760048036038101906101229190611438565b6103c5565b6040516101349190611493565b60405180910390f35b6101456103e3565b60405161015291906114bd565b60405180910390f35b610175600480360381019061017091906114d8565b6103ed565b6040516101829190611493565b60405180910390f35b6101936104e5565b6040516101a09190611547565b60405180910390f35b6101c360048036038101906101be9190611438565b6104ee565b6040516101d09190611493565b60405180910390f35b6101f360048036038101906101ee9190611438565b61059a565b005b61020f600480360381019061020a9190611438565b6105b1565b60405161021c91906114bd565b60405180910390f35b61023f600480360381019061023a9190611562565b610621565b60405161024c91906114bd565b60405180910390f35b61025d610669565b60405161026a919061137d565b60405180910390f35b61028d6004803603810190610288919061158f565b6106fb565b60405161029a91906114bd565b60405180910390f35b6102bd60048036038101906102b89190611438565b61072c565b6040516102ca9190611493565b60405180910390f35b6102ed60048036038101906102e89190611438565b610817565b6040516102fa9190611493565b60405180910390f35b61031d600480360381019061031891906115bc565b610835565b60405161032a91906114bd565b60405180910390f35b6060600380546103429061162b565b80601f016020809104026020016040519081016040528092919081815260200182805461036e9061162b565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b60006103d96103d26108bc565b84846108c4565b6001905092915050565b6000600254905090565b60006103fa848484610a8f565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104456108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc906116cf565b60405180910390fd5b6104d9856104d16108bc565b8584036108c4565b60019150509392505050565b60006012905090565b60006105906104fb6108bc565b8484600160006105096108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058b919061171e565b6108c4565b6001905092915050565b6105a2610d10565b506105ad8282610d66565b5050565b60008060006105fe84600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610ec6565b91509150816106155761061085610621565b610617565b805b9250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106789061162b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a49061162b565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050505050905090565b600080600061070b846006610ec6565b91509150816107215761071c6103e3565b610723565b805b92505050919050565b6000806001600061073b6108bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef906117e6565b60405180910390fd5b61080c6108036108bc565b858584036108c4565b600191505092915050565b600061082b6108246108bc565b8484610a8f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b90611878565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b9061190a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a8291906114bd565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af69061199c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611a2e565b60405180910390fd5b610b7a838383610fbc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf790611ac0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c93919061171e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf791906114bd565b60405180910390a3610d0a848484611076565b50505050565b6000610d1c600861107b565b6000610d26611091565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6781604051610d5791906114bd565b60405180910390a18091505090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90611b2c565b60405180910390fd5b610de260008383610fbc565b8060026000828254610df4919061171e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e49919061171e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eae91906114bd565b60405180910390a3610ec260008383611076565b5050565b60008060008411610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0390611b98565b60405180910390fd5b610f14611091565b841115610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d90611c04565b60405180910390fd5b6000610f6e85856000016110a290919063ffffffff16565b90508360000180549050811415610f8c576000809250925050610fb5565b6001846001018281548110610fa457610fa3611c24565b5b906000526020600020015492509250505b9250929050565b610fc783838361117c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110125761100582611181565b61100d6111d4565b611071565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561105d5761105083611181565b6110586111d4565b611070565b61106683611181565b61106f82611181565b5b5b505050565b505050565b6001816000016000828254019250508190555050565b600061109d60086111e8565b905090565b600080838054905014156110b95760009050611176565b600080848054905090505b8082101561111d5760006110d883836111f6565b9050848682815481106110ee576110ed611c24565b5b9060005260206000200154111561110757809150611117565b600181611114919061171e565b92505b506110c4565b600082118015611155575083856001846111379190611c53565b8154811061114857611147611c24565b5b9060005260206000200154145b15611170576001826111679190611c53565b92505050611176565b81925050505b92915050565b505050565b6111d1600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206111cc83610621565b61121c565b50565b6111e660066111e16103e3565b61121c565b565b600081600001549050919050565b600060028284186112079190611cb6565b828416611214919061171e565b905092915050565b6000611226611091565b90508061123584600001611297565b10156112925782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b600080828054905014156112ae57600090506112df565b81600183805490506112c09190611c53565b815481106112d1576112d0611c24565b5b906000526020600020015490505b919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561131e578082015181840152602081019050611303565b8381111561132d576000848401525b50505050565b6000601f19601f8301169050919050565b600061134f826112e4565b61135981856112ef565b9350611369818560208601611300565b61137281611333565b840191505092915050565b600060208201905081810360008301526113978184611344565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113cf826113a4565b9050919050565b6113df816113c4565b81146113ea57600080fd5b50565b6000813590506113fc816113d6565b92915050565b6000819050919050565b61141581611402565b811461142057600080fd5b50565b6000813590506114328161140c565b92915050565b6000806040838503121561144f5761144e61139f565b5b600061145d858286016113ed565b925050602061146e85828601611423565b9150509250929050565b60008115159050919050565b61148d81611478565b82525050565b60006020820190506114a86000830184611484565b92915050565b6114b781611402565b82525050565b60006020820190506114d260008301846114ae565b92915050565b6000806000606084860312156114f1576114f061139f565b5b60006114ff868287016113ed565b9350506020611510868287016113ed565b925050604061152186828701611423565b9150509250925092565b600060ff82169050919050565b6115418161152b565b82525050565b600060208201905061155c6000830184611538565b92915050565b6000602082840312156115785761157761139f565b5b6000611586848285016113ed565b91505092915050565b6000602082840312156115a5576115a461139f565b5b60006115b384828501611423565b91505092915050565b600080604083850312156115d3576115d261139f565b5b60006115e1858286016113ed565b92505060206115f2858286016113ed565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061164357607f821691505b60208210811415611657576116566115fc565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b60006116b96028836112ef565b91506116c48261165d565b604082019050919050565b600060208201905081810360008301526116e8816116ac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061172982611402565b915061173483611402565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611769576117686116ef565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006117d06025836112ef565b91506117db82611774565b604082019050919050565b600060208201905081810360008301526117ff816117c3565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006118626024836112ef565b915061186d82611806565b604082019050919050565b6000602082019050818103600083015261189181611855565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006118f46022836112ef565b91506118ff82611898565b604082019050919050565b60006020820190508181036000830152611923816118e7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006119866025836112ef565b91506119918261192a565b604082019050919050565b600060208201905081810360008301526119b581611979565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611a186023836112ef565b9150611a23826119bc565b604082019050919050565b60006020820190508181036000830152611a4781611a0b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611aaa6026836112ef565b9150611ab582611a4e565b604082019050919050565b60006020820190508181036000830152611ad981611a9d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611b16601f836112ef565b9150611b2182611ae0565b602082019050919050565b60006020820190508181036000830152611b4581611b09565b9050919050565b7f4552433230536e617073686f743a206964206973203000000000000000000000600082015250565b6000611b826016836112ef565b9150611b8d82611b4c565b602082019050919050565b60006020820190508181036000830152611bb181611b75565b9050919050565b7f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000600082015250565b6000611bee601d836112ef565b9150611bf982611bb8565b602082019050919050565b60006020820190508181036000830152611c1d81611be1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c5e82611402565b9150611c6983611402565b925082821015611c7c57611c7b6116ef565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cc182611402565b9150611ccc83611402565b925082611cdc57611cdb611c87565b5b82820490509291505056fea26469706673582212204ae73a8fe397e33339f61f525ac879ea517b0afb74aaf7bf63f0fb31b62ad58c64736f6c63430008090033";

type ERC20SnapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SnapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Snap__factory extends ContractFactory {
  constructor(...args: ERC20SnapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Snap> {
    return super.deploy(overrides || {}) as Promise<ERC20Snap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Snap {
    return super.attach(address) as ERC20Snap;
  }
  override connect(signer: Signer): ERC20Snap__factory {
    return super.connect(signer) as ERC20Snap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SnapInterface {
    return new utils.Interface(_abi) as ERC20SnapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Snap {
    return new Contract(address, _abi, signerOrProvider) as ERC20Snap;
  }
}
