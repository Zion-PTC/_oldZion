/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ProvaCounters, ProvaCountersInterface } from "../ProvaCounters";

const _abi = [
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060eb8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063047fc9aa146037578063d09de08a146051575b600080fd5b603d6059565b60405160489190609c565b60405180910390f35b60576065565b005b60008060000154905081565b606d6000606f565b565b6001816000016000828254019250508190555050565b6000819050919050565b6096816085565b82525050565b600060208201905060af6000830184608f565b9291505056fea26469706673582212205df47a99ded1d425ed0a7fbd3388be2129905a4494fbd9641114b4239cec9f1d64736f6c63430008090033";

type ProvaCountersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvaCountersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProvaCounters__factory extends ContractFactory {
  constructor(...args: ProvaCountersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProvaCounters> {
    return super.deploy(overrides || {}) as Promise<ProvaCounters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProvaCounters {
    return super.attach(address) as ProvaCounters;
  }
  override connect(signer: Signer): ProvaCounters__factory {
    return super.connect(signer) as ProvaCounters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvaCountersInterface {
    return new utils.Interface(_abi) as ProvaCountersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProvaCounters {
    return new Contract(address, _abi, signerOrProvider) as ProvaCounters;
  }
}
