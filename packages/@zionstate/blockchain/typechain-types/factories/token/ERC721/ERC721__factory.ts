/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERC721, ERC721Interface } from "../../../token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200288e3803806200288e8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b6124d680620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611531565b6102bc565b6040516100fb9190611579565b60405180910390f35b61010c61039e565b604051610119919061162d565b60405180910390f35b61013c60048036038101906101379190611685565b610430565b60405161014991906116f3565b60405180910390f35b61016c6004803603810190610167919061173a565b6104b5565b005b6101886004803603810190610183919061177a565b6105c3565b005b6101a4600480360381019061019f919061177a565b610623565b005b6101c060048036038101906101bb9190611685565b610643565b6040516101cd91906116f3565b60405180910390f35b6101f060048036038101906101eb91906117cd565b6106f5565b6040516101fd9190611809565b60405180910390f35b61020e6107ad565b60405161021b919061162d565b60405180910390f35b61023e60048036038101906102399190611850565b61083f565b005b61025a600480360381019061025591906119c5565b610855565b005b61027660048036038101906102719190611685565b6108b7565b604051610283919061162d565b60405180910390f35b6102a660048036038101906102a19190611a48565b61095e565b6040516102b39190611579565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826109f2565b5b9050919050565b6060600080546103ad90611ab7565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ab7565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610a5c565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611b5b565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c082610643565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611bed565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610550610ac8565b73ffffffffffffffffffffffffffffffffffffffff16148061057f575061057e81610579610ac8565b61095e565b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590611bed565b60405180910390fd5b505050565b6105d46105ce610ac8565b82610ad0565b610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611c7f565b60405180910390fd5b61061e838383610bae565b505050565b61063e83838360405180602001604052806000815250610855565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e390611d11565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90611da3565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107bc90611ab7565b80601f01602080910402602001604051908101604052809291908181526020018280546107e890611ab7565b80156108355780601f1061080a57610100808354040283529160200191610835565b820191906000526020600020905b81548152906001019060200180831161081857829003601f168201915b5050505050905090565b61085161084a610ac8565b8383610dd5565b5050565b610866610860610ac8565b83610ad0565b6108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611e35565b60405180910390fd5b6108b184848484610f42565b50505050565b60606108c282610a5c565b610901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f890611ec7565b60405180910390fd5b600061090b610f9e565b9050600081511161092b5760405180602001604052806000815250610956565b8061093584610fb5565b604051602001610946929190611f23565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b6000610adb82610a5c565b610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190611fb9565b60405180910390fd5b6000610b2583610643565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b9457508373ffffffffffffffffffffffffffffffffffffffff16610b7c84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610ba55750610ba4818561095e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610bce82610643565b73ffffffffffffffffffffffffffffffffffffffff1614610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b9061204b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b906120dd565b60405180910390fd5b6000610cb9610ca1610ac8565b85858560405180602001604052806000815250611116565b9050610cc4816111ee565b610ccf6000836111f1565b6001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d1f919061212c565b925050819055506001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d769190612160565b92505081905550826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b90612202565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f359190611579565b60405180910390a3505050565b610f4d848484610bae565b610f59848484846112aa565b610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90612294565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415610ffd576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611111565b600082905060005b6000821461102f578080611018906122b4565b915050600a82611028919061232c565b9150611005565b60008167ffffffffffffffff81111561104b5761104a61189a565b5b6040519080825280601f01601f19166020018201604052801561107d5781602001600182028036833780820191505090505b5090505b6000851461110a57600182611096919061212c565b9150600a856110a5919061235d565b60306110b19190612160565b60f81b8183815181106110c7576110c661238e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611103919061232c565b9450611081565b8093505050505b919050565b61111e611454565b611126611454565b86816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838160600181815250508281608001819052508091505095945050505050565b50565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661126483610643565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006112cb8473ffffffffffffffffffffffffffffffffffffffff16611441565b15611434578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112f4610ac8565b8786866040518563ffffffff1660e01b81526004016113169493929190612412565b602060405180830381600087803b15801561133057600080fd5b505af192505050801561136157506040513d601f19601f8201168201806040525081019061135e9190612473565b60015b6113e4573d8060008114611391576040519150601f19603f3d011682016040523d82523d6000602084013e611396565b606091505b506000815114156113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d390612294565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611439565b600190505b949350505050565b600080823b905060008111915050919050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61150e816114d9565b811461151957600080fd5b50565b60008135905061152b81611505565b92915050565b600060208284031215611547576115466114cf565b5b60006115558482850161151c565b91505092915050565b60008115159050919050565b6115738161155e565b82525050565b600060208201905061158e600083018461156a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115ce5780820151818401526020810190506115b3565b838111156115dd576000848401525b50505050565b6000601f19601f8301169050919050565b60006115ff82611594565b611609818561159f565b93506116198185602086016115b0565b611622816115e3565b840191505092915050565b6000602082019050818103600083015261164781846115f4565b905092915050565b6000819050919050565b6116628161164f565b811461166d57600080fd5b50565b60008135905061167f81611659565b92915050565b60006020828403121561169b5761169a6114cf565b5b60006116a984828501611670565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116dd826116b2565b9050919050565b6116ed816116d2565b82525050565b600060208201905061170860008301846116e4565b92915050565b611717816116d2565b811461172257600080fd5b50565b6000813590506117348161170e565b92915050565b60008060408385031215611751576117506114cf565b5b600061175f85828601611725565b925050602061177085828601611670565b9150509250929050565b600080600060608486031215611793576117926114cf565b5b60006117a186828701611725565b93505060206117b286828701611725565b92505060406117c386828701611670565b9150509250925092565b6000602082840312156117e3576117e26114cf565b5b60006117f184828501611725565b91505092915050565b6118038161164f565b82525050565b600060208201905061181e60008301846117fa565b92915050565b61182d8161155e565b811461183857600080fd5b50565b60008135905061184a81611824565b92915050565b60008060408385031215611867576118666114cf565b5b600061187585828601611725565b92505060206118868582860161183b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118d2826115e3565b810181811067ffffffffffffffff821117156118f1576118f061189a565b5b80604052505050565b60006119046114c5565b905061191082826118c9565b919050565b600067ffffffffffffffff8211156119305761192f61189a565b5b611939826115e3565b9050602081019050919050565b82818337600083830152505050565b600061196861196384611915565b6118fa565b90508281526020810184848401111561198457611983611895565b5b61198f848285611946565b509392505050565b600082601f8301126119ac576119ab611890565b5b81356119bc848260208601611955565b91505092915050565b600080600080608085870312156119df576119de6114cf565b5b60006119ed87828801611725565b94505060206119fe87828801611725565b9350506040611a0f87828801611670565b925050606085013567ffffffffffffffff811115611a3057611a2f6114d4565b5b611a3c87828801611997565b91505092959194509250565b60008060408385031215611a5f57611a5e6114cf565b5b6000611a6d85828601611725565b9250506020611a7e85828601611725565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611acf57607f821691505b60208210811415611ae357611ae2611a88565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611b45602c8361159f565b9150611b5082611ae9565b604082019050919050565b60006020820190508181036000830152611b7481611b38565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bd760218361159f565b9150611be282611b7b565b604082019050919050565b60006020820190508181036000830152611c0681611bca565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74652060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611c6960328361159f565b9150611c7482611c0d565b604082019050919050565b60006020820190508181036000830152611c9881611c5c565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e206578697360008201527f74696e6720746f6b656e00000000000000000000000000000000000000000000602082015250565b6000611cfb602a8361159f565b9150611d0682611c9f565b604082019050919050565b60006020820190508181036000830152611d2a81611cee565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000611d8d602a8361159f565b9150611d9882611d31565b604082019050919050565b60006020820190508181036000830152611dbc81611d80565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000611e1f60318361159f565b9150611e2a82611dc3565b604082019050919050565b60006020820190508181036000830152611e4e81611e12565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611eb1602f8361159f565b9150611ebc82611e55565b604082019050919050565b60006020820190508181036000830152611ee081611ea4565b9050919050565b600081905092915050565b6000611efd82611594565b611f078185611ee7565b9350611f178185602086016115b0565b80840191505092915050565b6000611f2f8285611ef2565b9150611f3b8284611ef2565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611fa3602c8361159f565b9150611fae82611f47565b604082019050919050565b60006020820190508181036000830152611fd281611f96565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b600061203560298361159f565b915061204082611fd9565b604082019050919050565b6000602082019050818103600083015261206481612028565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120c760248361159f565b91506120d28261206b565b604082019050919050565b600060208201905081810360008301526120f6816120ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121378261164f565b91506121428361164f565b925082821015612155576121546120fd565b5b828203905092915050565b600061216b8261164f565b91506121768361164f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121ab576121aa6120fd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006121ec60198361159f565b91506121f7826121b6565b602082019050919050565b6000602082019050818103600083015261221b816121df565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061227e60328361159f565b915061228982612222565b604082019050919050565b600060208201905081810360008301526122ad81612271565b9050919050565b60006122bf8261164f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122f2576122f16120fd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006123378261164f565b91506123428361164f565b925082612352576123516122fd565b5b828204905092915050565b60006123688261164f565b91506123738361164f565b925082612383576123826122fd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006123e4826123bd565b6123ee81856123c8565b93506123fe8185602086016115b0565b612407816115e3565b840191505092915050565b600060808201905061242760008301876116e4565b61243460208301866116e4565b61244160408301856117fa565b818103606083015261245381846123d9565b905095945050505050565b60008151905061246d81611505565b92915050565b600060208284031215612489576124886114cf565b5b60006124978482850161245e565b9150509291505056fea26469706673582212202aa161a35ca3f9b4098042ce31adaabff1e6e16405d8596458bfeeaa7069ad1864736f6c63430008090033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
