/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { A, AInterface } from "../../provaSuper.sol/A";

const _abi = [
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number_",
        type: "uint256",
      },
    ],
    name: "updateNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610152806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631db05a881461003b5780638381f58a14610057575b600080fd5b610055600480360381019061005091906100c5565b610075565b005b61005f610081565b60405161006c9190610101565b60405180910390f35b61007e81610087565b50565b60005481565b50565b600080fd5b6000819050919050565b6100a28161008f565b81146100ad57600080fd5b50565b6000813590506100bf81610099565b92915050565b6000602082840312156100db576100da61008a565b5b60006100e9848285016100b0565b91505092915050565b6100fb8161008f565b82525050565b600060208201905061011660008301846100f2565b9291505056fea2646970667358221220b6a4c814ead1d034165f63ab0fbcc52a1503d43c1646fbecda6573b3b5fe423a64736f6c63430008090033";

type AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class A__factory extends ContractFactory {
  constructor(...args: AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<A> {
    return super.deploy(overrides || {}) as Promise<A>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): A {
    return super.attach(address) as A;
  }
  override connect(signer: Signer): A__factory {
    return super.connect(signer) as A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AInterface {
    return new utils.Interface(_abi) as AInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): A {
    return new Contract(address, _abi, signerOrProvider) as A;
  }
}
