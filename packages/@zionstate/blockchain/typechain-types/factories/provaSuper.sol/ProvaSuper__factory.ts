/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ProvaSuper,
  ProvaSuperInterface,
} from "../../provaSuper.sol/ProvaSuper";

const _abi = [
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number_",
        type: "uint256",
      },
    ],
    name: "updateNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610445806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631db05a881461003b5780638381f58a14610057575b600080fd5b610055600480360381019061005091906102cd565b610075565b005b61005f610081565b60405161006c9190610309565b60405180910390f35b61007e81610087565b50565b60005481565b6100c86040518060400160405280601481526020017f50726f766153757065723a3a206e756d6265723a000000000000000000000000815250600054610131565b6100d1816101cd565b6000811415610126576101186040518060400160405280600c81526020017f72656163686564206865726500000000000000000000000000000000000000008152506101d0565b6103e860008190555061012e565b806000819055505b50565b6101c982826040516024016101479291906103bd565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610269565b5050565b50565b610266816040516024016101e491906103ed565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610269565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b6102aa81610297565b81146102b557600080fd5b50565b6000813590506102c7816102a1565b92915050565b6000602082840312156102e3576102e2610292565b5b60006102f1848285016102b8565b91505092915050565b61030381610297565b82525050565b600060208201905061031e60008301846102fa565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561035e578082015181840152602081019050610343565b8381111561036d576000848401525b50505050565b6000601f19601f8301169050919050565b600061038f82610324565b610399818561032f565b93506103a9818560208601610340565b6103b281610373565b840191505092915050565b600060408201905081810360008301526103d78185610384565b90506103e660208301846102fa565b9392505050565b600060208201905081810360008301526104078184610384565b90509291505056fea26469706673582212203b2e9bd13f7eab1b96328f55748f57747802aead6f5c70fc01308f89887fa63764736f6c63430008090033";

type ProvaSuperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvaSuperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProvaSuper__factory extends ContractFactory {
  constructor(...args: ProvaSuperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProvaSuper> {
    return super.deploy(overrides || {}) as Promise<ProvaSuper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProvaSuper {
    return super.attach(address) as ProvaSuper;
  }
  override connect(signer: Signer): ProvaSuper__factory {
    return super.connect(signer) as ProvaSuper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvaSuperInterface {
    return new utils.Interface(_abi) as ProvaSuperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProvaSuper {
    return new Contract(address, _abi, signerOrProvider) as ProvaSuper;
  }
}
