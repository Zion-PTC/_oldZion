/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AccessControlEnumerableMock,
  AccessControlEnumerableMockInterface,
} from "../../../oz/mocks/AccessControlEnumerableMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "senderProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRoleId",
        type: "bytes32",
      },
    ],
    name: "setRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000366000801b6200002a6200003c60201b60201c565b6200004460201b60201c565b620002d2565b600033905090565b6200005682826200005a60201b60201c565b5050565b620000718282620000a260201b6200049e1760201c565b6200009d81600160008581526020019081526020016000206200019360201b6200057e1790919060201c565b505050565b620000b48282620001cb60201b60201c565b6200018f57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001346200003c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620001c3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200023560201b60201c565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000620002498383620002af60201b60201c565b620002a4578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620002a9565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b61151580620002e26000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634b9304a4116100715780634b9304a4146101625780639010d07c1461017e57806391d14854146101ae578063a217fddf146101de578063ca15c873146101fc578063d547741f1461022c576100a9565b806301ffc9a7146100ae5780631e4e0091146100de578063248a9ca3146100fa5780632f2ff15d1461012a57806336568abe14610146575b600080fd5b6100c860048036038101906100c39190610db6565b610248565b6040516100d59190610dfe565b60405180910390f35b6100f860048036038101906100f39190610e4f565b6102c2565b005b610114600480360381019061010f9190610e8f565b6102d0565b6040516101219190610ecb565b60405180910390f35b610144600480360381019061013f9190610f44565b6102ef565b005b610160600480360381019061015b9190610f44565b610318565b005b61017c60048036038101906101779190610e8f565b61039b565b005b61019860048036038101906101939190610fba565b6103b1565b6040516101a59190611009565b60405180910390f35b6101c860048036038101906101c39190610f44565b6103e0565b6040516101d59190610dfe565b60405180910390f35b6101e661044a565b6040516101f39190610ecb565b60405180910390f35b61021660048036038101906102119190610e8f565b610451565b6040516102239190611033565b60405180910390f35b61024660048036038101906102419190610f44565b610475565b005b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102bb57506102ba826105ae565b5b9050919050565b6102cc8282610628565b5050565b6000806000838152602001908152602001600020600101549050919050565b6102f8826102d0565b61030981610304610683565b61068b565b6103138383610728565b505050565b610320610683565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461038d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610384906110d1565b60405180910390fd5b610397828261075c565b5050565b806103ad816103a8610683565b61068b565b5050565b60006103d8826001600086815260200190815260200160002061079090919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600061046e600160008481526020019081526020016000206107aa565b9050919050565b61047e826102d0565b61048f8161048a610683565b61068b565b610499838361075c565b505050565b6104a882826103e0565b61057a57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061051f610683565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006105a6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6107bf565b905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061062157506106208261082f565b5b9050919050565b6000610633836102d0565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600033905090565b61069582826103e0565b610724576106ba8173ffffffffffffffffffffffffffffffffffffffff166014610899565b6106c88360001c6020610899565b6040516020016106d9929190611203565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9190611287565b60405180910390fd5b5050565b610732828261049e565b610757816001600085815260200190815260200160002061057e90919063ffffffff16565b505050565b6107668282610ad5565b61078b8160016000858152602001908152602001600020610bb690919063ffffffff16565b505050565b600061079f8360000183610be6565b60001c905092915050565b60006107b882600001610c11565b9050919050565b60006107cb8383610c22565b610824578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610829565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060600060028360026108ac91906112d8565b6108b69190611332565b67ffffffffffffffff8111156108cf576108ce611388565b5b6040519080825280601f01601f1916602001820160405280156109015781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610939576109386113b7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061099d5761099c6113b7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109dd91906112d8565b6109e79190611332565b90505b6001811115610a87577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610a2957610a286113b7565b5b1a60f81b828281518110610a4057610a3f6113b7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610a80906113e6565b90506109ea565b5060008414610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac29061145c565b60405180910390fd5b8091505092915050565b610adf82826103e0565b15610bb257600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b57610683565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610bde836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610c45565b905092915050565b6000826000018281548110610bfe57610bfd6113b7565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114610d4d576000600182610c77919061147c565b9050600060018660000180549050610c8f919061147c565b9050818114610cfe576000866000018281548110610cb057610caf6113b7565b5b9060005260206000200154905080876000018481548110610cd457610cd36113b7565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610d1257610d116114b0565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d53565b60009150505b92915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d9381610d5e565b8114610d9e57600080fd5b50565b600081359050610db081610d8a565b92915050565b600060208284031215610dcc57610dcb610d59565b5b6000610dda84828501610da1565b91505092915050565b60008115159050919050565b610df881610de3565b82525050565b6000602082019050610e136000830184610def565b92915050565b6000819050919050565b610e2c81610e19565b8114610e3757600080fd5b50565b600081359050610e4981610e23565b92915050565b60008060408385031215610e6657610e65610d59565b5b6000610e7485828601610e3a565b9250506020610e8585828601610e3a565b9150509250929050565b600060208284031215610ea557610ea4610d59565b5b6000610eb384828501610e3a565b91505092915050565b610ec581610e19565b82525050565b6000602082019050610ee06000830184610ebc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1182610ee6565b9050919050565b610f2181610f06565b8114610f2c57600080fd5b50565b600081359050610f3e81610f18565b92915050565b60008060408385031215610f5b57610f5a610d59565b5b6000610f6985828601610e3a565b9250506020610f7a85828601610f2f565b9150509250929050565b6000819050919050565b610f9781610f84565b8114610fa257600080fd5b50565b600081359050610fb481610f8e565b92915050565b60008060408385031215610fd157610fd0610d59565b5b6000610fdf85828601610e3a565b9250506020610ff085828601610fa5565b9150509250929050565b61100381610f06565b82525050565b600060208201905061101e6000830184610ffa565b92915050565b61102d81610f84565b82525050565b60006020820190506110486000830184611024565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006110bb602f8361104e565b91506110c68261105f565b604082019050919050565b600060208201905081810360008301526110ea816110ae565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006111326017836110f1565b915061113d826110fc565b601782019050919050565b600081519050919050565b60005b83811015611171578082015181840152602081019050611156565b83811115611180576000848401525b50505050565b600061119182611148565b61119b81856110f1565b93506111ab818560208601611153565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006111ed6011836110f1565b91506111f8826111b7565b601182019050919050565b600061120e82611125565b915061121a8285611186565b9150611225826111e0565b91506112318284611186565b91508190509392505050565b6000601f19601f8301169050919050565b600061125982611148565b611263818561104e565b9350611273818560208601611153565b61127c8161123d565b840191505092915050565b600060208201905081810360008301526112a1818461124e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112e382610f84565b91506112ee83610f84565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611327576113266112a9565b5b828202905092915050565b600061133d82610f84565b915061134883610f84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561137d5761137c6112a9565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113f182610f84565b91506000821415611405576114046112a9565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061144660208361104e565b915061145182611410565b602082019050919050565b6000602082019050818103600083015261147581611439565b9050919050565b600061148782610f84565b915061149283610f84565b9250828210156114a5576114a46112a9565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220796eba05489814504984979b0dae816622c8f7240c63d5543ea9af69f43579bb64736f6c63430008090033";

type AccessControlEnumerableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlEnumerableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlEnumerableMock__factory extends ContractFactory {
  constructor(...args: AccessControlEnumerableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessControlEnumerableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<AccessControlEnumerableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlEnumerableMock {
    return super.attach(address) as AccessControlEnumerableMock;
  }
  override connect(signer: Signer): AccessControlEnumerableMock__factory {
    return super.connect(signer) as AccessControlEnumerableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlEnumerableMockInterface {
    return new utils.Interface(_abi) as AccessControlEnumerableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlEnumerableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlEnumerableMock;
  }
}
