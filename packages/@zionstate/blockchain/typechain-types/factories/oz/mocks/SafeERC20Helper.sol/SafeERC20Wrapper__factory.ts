/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SafeERC20Wrapper,
  SafeERC20WrapperInterface,
} from "../../../../oz/mocks/SafeERC20Helper.sol/SafeERC20Wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001318380380620013188339818101604052810190620000379190620000fc565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b6000620000c482620000a3565b9050919050565b620000d681620000b7565b8114620000e257600080fd5b50565b600081519050620000f681620000cb565b92915050565b6000602082840312156200011557620001146200007e565b5b60006200012584828501620000e5565b91505092915050565b6111da806200013e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063811c34d31161005b578063811c34d3146100d65780638a4068dd146100e0578063b759f954146100ea578063de242ff4146101065761007d565b806310bad4cf1461008257806311e330b21461009e5780633ba93f26146100ba575b600080fd5b61009c60048036038101906100979190610b8a565b610124565b005b6100b860048036038101906100b39190610b8a565b610173565b005b6100d460048036038101906100cf9190610b8a565b6101c2565b005b6100de610250565b005b6100e86102a2565b005b61010460048036038101906100ff9190610b8a565b6102f0565b005b61010e61033f565b60405161011b9190610bc6565b60405180910390f35b61017060008260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103f39092919063ffffffff16565b50565b6101bf60008260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105549092919063ffffffff16565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ba93f26826040518263ffffffff1660e01b815260040161021b9190610bc6565b600060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b5050505050565b6102a060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610675909392919063ffffffff16565b565b6102ee60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166106fe9092919063ffffffff16565b565b61033c60008260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107849092919063ffffffff16565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e6000806040518363ffffffff1660e01b815260040161039e929190610c22565b60206040518083038186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610c60565b905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610430929190610c22565b60206040518083038186803b15801561044857600080fd5b505afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190610c60565b9050818110156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610d10565b60405180910390fd5b6000828203905061054d8563095ea7b360e01b86846040516024016104eb929190610d30565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108e2565b5050505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610592929190610c22565b60206040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190610c60565b6105ec9190610d88565b905061066f8463095ea7b360e01b858460405160240161060d929190610d30565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108e2565b50505050565b6106f8846323b872dd60e01b85858560405160240161069693929190610dde565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108e2565b50505050565b61077f8363a9059cbb60e01b848460405160240161071d929190610d30565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108e2565b505050565b600081148061081d575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016107cb929190610c22565b60206040518083038186803b1580156107e357600080fd5b505afa1580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b9190610c60565b145b61085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390610e87565b60405180910390fd5b6108dd8363095ea7b360e01b848460405160240161087b929190610d30565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108e2565b505050565b6000610944826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109a99092919063ffffffff16565b90506000815111156109a457808060200190518101906109649190610edf565b6109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90610f7e565b60405180910390fd5b5b505050565b60606109b884846000856109c1565b90509392505050565b606082471015610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fd90611010565b60405180910390fd5b610a0f85610ad5565b610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a459061107c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a779190611116565b60006040518083038185875af1925050503d8060008114610ab4576040519150601f19603f3d011682016040523d82523d6000602084013e610ab9565b606091505b5091509150610ac9828286610ae8565b92505050949350505050565b600080823b905060008111915050919050565b60608315610af857829050610b48565b600083511115610b0b5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f9190611182565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b610b6781610b54565b8114610b7257600080fd5b50565b600081359050610b8481610b5e565b92915050565b600060208284031215610ba057610b9f610b4f565b5b6000610bae84828501610b75565b91505092915050565b610bc081610b54565b82525050565b6000602082019050610bdb6000830184610bb7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0c82610be1565b9050919050565b610c1c81610c01565b82525050565b6000604082019050610c376000830185610c13565b610c446020830184610c13565b9392505050565b600081519050610c5a81610b5e565b92915050565b600060208284031215610c7657610c75610b4f565b5b6000610c8484828501610c4b565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b6000610cfa602983610c8d565b9150610d0582610c9e565b604082019050919050565b60006020820190508181036000830152610d2981610ced565b9050919050565b6000604082019050610d456000830185610c13565b610d526020830184610bb7565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d9382610b54565b9150610d9e83610b54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dd357610dd2610d59565b5b828201905092915050565b6000606082019050610df36000830186610c13565b610e006020830185610c13565b610e0d6040830184610bb7565b949350505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000610e71603683610c8d565b9150610e7c82610e15565b604082019050919050565b60006020820190508181036000830152610ea081610e64565b9050919050565b60008115159050919050565b610ebc81610ea7565b8114610ec757600080fd5b50565b600081519050610ed981610eb3565b92915050565b600060208284031215610ef557610ef4610b4f565b5b6000610f0384828501610eca565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610f68602a83610c8d565b9150610f7382610f0c565b604082019050919050565b60006020820190508181036000830152610f9781610f5b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610ffa602683610c8d565b915061100582610f9e565b604082019050919050565b6000602082019050818103600083015261102981610fed565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611066601d83610c8d565b915061107182611030565b602082019050919050565b6000602082019050818103600083015261109581611059565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156110d05780820151818401526020810190506110b5565b838111156110df576000848401525b50505050565b60006110f08261109c565b6110fa81856110a7565b935061110a8185602086016110b2565b80840191505092915050565b600061112282846110e5565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006111548261112d565b61115e8185610c8d565b935061116e8185602086016110b2565b61117781611138565b840191505092915050565b6000602082019050818103600083015261119c8184611149565b90509291505056fea26469706673582212206f25e6eabdf2613c4c42c31f38d305b190b37258805ce85bf731315901a5d02264736f6c63430008090033";

type SafeERC20WrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeERC20WrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeERC20Wrapper__factory extends ContractFactory {
  constructor(...args: SafeERC20WrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeERC20Wrapper> {
    return super.deploy(token, overrides || {}) as Promise<SafeERC20Wrapper>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): SafeERC20Wrapper {
    return super.attach(address) as SafeERC20Wrapper;
  }
  override connect(signer: Signer): SafeERC20Wrapper__factory {
    return super.connect(signer) as SafeERC20Wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20WrapperInterface {
    return new utils.Interface(_abi) as SafeERC20WrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Wrapper {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Wrapper;
  }
}
