/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CallReceiverMock,
  CallReceiverMockInterface,
} from "../../../oz/mocks/CallReceiverMock";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "MockFunctionCalled",
    type: "event",
  },
  {
    inputs: [],
    name: "mockFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionNonPayable",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionOutOfGas",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionRevertsNoReason",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionRevertsReason",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionThrows",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionWritesStorage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockStaticFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sharedAnswer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610743806100206000396000f3fe6080604052600436106100865760003560e01c80633e6fec04116100595780633e6fec04146100d4578063a793ab47146100f2578063aa04f77e146100fc578063c8fc769614610127578063fc40cf731461015257610086565b80630c0349681461008b5780630f63e42c146100955780632c81d638146100c05780633bcfaa14146100ca575b600080fd5b61009361017d565b005b3480156100a157600080fd5b506100aa6101b8565b6040516100b7919061056d565b60405180910390f35b6100c8610221565b005b6100d2610226565b005b6100dc610237565b6040516100e9919061056d565b60405180910390f35b6100fa6102a0565b005b34801561010857600080fd5b506101116102dd565b60405161011e919061056d565b60405180910390f35b34801561013357600080fd5b5061013c610366565b604051610149919061056d565b60405180910390f35b34801561015e57600080fd5b506101676103a3565b604051610174919061056d565b60405180910390f35b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101af906105db565b60405180910390fd5b60607f52c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c2360405160405180910390a16040518060400160405280600681526020017f3078313233340000000000000000000000000000000000000000000000000000815250905090565b600080fd5b6000610235576102346105fb565b5b565b60607f52c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c2360405160405180910390a16040518060400160405280600681526020017f3078313233340000000000000000000000000000000000000000000000000000815250905090565b60005b6001819080600181540180825580915050600190039060005260206000200160009091909190915055806102d690610663565b90506102a3565b60606040518060400160405280600281526020017f34320000000000000000000000000000000000000000000000000000000000008152506000908051906020019061032a929190610431565b506040518060400160405280600681526020017f3078313233340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f3078313233340000000000000000000000000000000000000000000000000000815250905090565b600080546103b0906106db565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc906106db565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b505050505081565b82805461043d906106db565b90600052602060002090601f01602090048101928261045f57600085556104a6565b82601f1061047857805160ff19168380011785556104a6565b828001600101855582156104a6579182015b828111156104a557825182559160200191906001019061048a565b5b5090506104b391906104b7565b5090565b5b808211156104d05760008160009055506001016104b8565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561050e5780820151818401526020810190506104f3565b8381111561051d576000848401525b50505050565b6000601f19601f8301169050919050565b600061053f826104d4565b61054981856104df565b93506105598185602086016104f0565b61056281610523565b840191505092915050565b600060208201905081810360008301526105878184610534565b905092915050565b7f43616c6c52656365697665724d6f636b3a20726576657274696e670000000000600082015250565b60006105c5601b836104df565b91506105d08261058f565b602082019050919050565b600060208201905081810360008301526105f4816105b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061066e82610659565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106a1576106a061062a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f357607f821691505b60208210811415610707576107066106ac565b5b5091905056fea2646970667358221220c54bbdfc0c47b4f1fd2401c7b36e0650c65a610c11fc22bcb12f7b038633b8ca64736f6c63430008090033";

type CallReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallReceiverMock__factory extends ContractFactory {
  constructor(...args: CallReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallReceiverMock> {
    return super.deploy(overrides || {}) as Promise<CallReceiverMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CallReceiverMock {
    return super.attach(address) as CallReceiverMock;
  }
  override connect(signer: Signer): CallReceiverMock__factory {
    return super.connect(signer) as CallReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallReceiverMockInterface {
    return new utils.Interface(_abi) as CallReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as CallReceiverMock;
  }
}
