/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC2771ContextMock,
  ERC2771ContextMockInterface,
} from "../../../oz/mocks/ERC2771ContextMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "integerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "stringValue",
        type: "string",
      },
    ],
    name: "Data",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Sender",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "integerValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "stringValue",
        type: "string",
      },
    ],
    name: "msgData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "msgSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081e38038061081e833981810160405281019061003291906100dd565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061010a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b6100ba8161009f565b81146100c557600080fd5b50565b6000815190506100d7816100b1565b92915050565b6000602082840312156100f3576100f261007a565b5b6000610101848285016100c8565b91505092915050565b610705806101196000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063376bf26214610046578063572b6c0514610062578063d737d0c714610092575b600080fd5b610060600480360381019061005b91906103c4565b61009c565b005b61007c6004803603810190610077919061047e565b6100e3565b60405161008991906104c6565b60405180910390f35b61009a61013c565b005b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea06100c561017c565b84846040516100d794939291906105b6565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61016561018f565b604051610172919061060c565b60405180910390a1565b36600061018761019e565b915091509091565b60006101996101ed565b905090565b3660006101aa336100e3565b156101dc57600036600090601460003690506101c69190610656565b926101d393929190610694565b915091506101e9565b6101e461021f565b915091505b9091565b60006101f8336100e3565b1561020c57601436033560601c905061021b565b61021461022c565b905061021c565b5b90565b3660008036915091509091565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61025b81610248565b811461026657600080fd5b50565b60008135905061027881610252565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102d182610288565b810181811067ffffffffffffffff821117156102f0576102ef610299565b5b80604052505050565b6000610303610234565b905061030f82826102c8565b919050565b600067ffffffffffffffff82111561032f5761032e610299565b5b61033882610288565b9050602081019050919050565b82818337600083830152505050565b600061036761036284610314565b6102f9565b90508281526020810184848401111561038357610382610283565b5b61038e848285610345565b509392505050565b600082601f8301126103ab576103aa61027e565b5b81356103bb848260208601610354565b91505092915050565b600080604083850312156103db576103da61023e565b5b60006103e985828601610269565b925050602083013567ffffffffffffffff81111561040a57610409610243565b5b61041685828601610396565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044b82610420565b9050919050565b61045b81610440565b811461046657600080fd5b50565b60008135905061047881610452565b92915050565b6000602082840312156104945761049361023e565b5b60006104a284828501610469565b91505092915050565b60008115159050919050565b6104c0816104ab565b82525050565b60006020820190506104db60008301846104b7565b92915050565b600082825260208201905092915050565b60006104fe83856104e1565b935061050b838584610345565b61051483610288565b840190509392505050565b61052881610248565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561056857808201518184015260208101905061054d565b83811115610577576000848401525b50505050565b60006105888261052e565b6105928185610539565b93506105a281856020860161054a565b6105ab81610288565b840191505092915050565b600060608201905081810360008301526105d18186886104f2565b90506105e0602083018561051f565b81810360408301526105f2818461057d565b905095945050505050565b61060681610440565b82525050565b600060208201905061062160008301846105fd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061066182610248565b915061066c83610248565b92508282101561067f5761067e610627565b5b828203905092915050565b600080fd5b600080fd5b600080858511156106a8576106a761068a565b5b838611156106b9576106b861068f565b5b600185028301915084860390509450949250505056fea264697066735822122044c4dc3b10908d4af4c22e2c7d5afab2788163f82232691d8d29ab1a2702941b64736f6c63430008090033";

type ERC2771ContextMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2771ContextMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2771ContextMock__factory extends ContractFactory {
  constructor(...args: ERC2771ContextMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC2771ContextMock> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<ERC2771ContextMock>;
  }
  override getDeployTransaction(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  override attach(address: string): ERC2771ContextMock {
    return super.attach(address) as ERC2771ContextMock;
  }
  override connect(signer: Signer): ERC2771ContextMock__factory {
    return super.connect(signer) as ERC2771ContextMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2771ContextMockInterface {
    return new utils.Interface(_abi) as ERC2771ContextMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC2771ContextMock {
    return new Contract(address, _abi, signerOrProvider) as ERC2771ContextMock;
  }
}
