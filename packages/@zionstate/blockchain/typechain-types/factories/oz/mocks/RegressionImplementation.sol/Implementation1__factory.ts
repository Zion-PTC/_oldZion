/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Implementation1,
  Implementation1Interface,
} from "../../../../oz/mocks/RegressionImplementation.sol/Implementation1";

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610285806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063552410771461003b5780638129fc1c14610057575b600080fd5b6100556004803603810190610050919061017f565b610061565b005b61005f61006b565b005b8060018190555050565b600060019054906101000a900460ff1680610091575060008054906101000a900460ff16155b6100d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c79061022f565b60405180910390fd5b60008060019054906101000a900460ff161590508015610120576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156101415760008060016101000a81548160ff0219169083151502179055505b50565b600080fd5b6000819050919050565b61015c81610149565b811461016757600080fd5b50565b60008135905061017981610153565b92915050565b60006020828403121561019557610194610144565b5b60006101a38482850161016a565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610219602e836101ac565b9150610224826101bd565b604082019050919050565b600060208201905081810360008301526102488161020c565b905091905056fea26469706673582212206eda6abaa70153a451919e5f56ae554cb02a71082ae2afd41b8c3e9bd4bbd11c64736f6c63430008090033";

type Implementation1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Implementation1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Implementation1__factory extends ContractFactory {
  constructor(...args: Implementation1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Implementation1> {
    return super.deploy(overrides || {}) as Promise<Implementation1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Implementation1 {
    return super.attach(address) as Implementation1;
  }
  override connect(signer: Signer): Implementation1__factory {
    return super.connect(signer) as Implementation1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Implementation1Interface {
    return new utils.Interface(_abi) as Implementation1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Implementation1 {
    return new Contract(address, _abi, signerOrProvider) as Implementation1;
  }
}
