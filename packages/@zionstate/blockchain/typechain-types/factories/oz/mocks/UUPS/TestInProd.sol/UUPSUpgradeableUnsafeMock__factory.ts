/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  UUPSUpgradeableUnsafeMock,
  UUPSUpgradeableUnsafeMockInterface,
} from "../../../../../oz/mocks/UUPS/TestInProd.sol/UUPSUpgradeableUnsafeMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051610a1b61005c60003960005050610a1b6000f3fe6080604052600436106100555760003560e01c80632baeceb71461005a5780633659cfe6146100715780634f1ef2861461009a5780639fa6a6e3146100b6578063d09de08a146100e1578063d826f88f146100f8575b600080fd5b34801561006657600080fd5b5061006f61010f565b005b34801561007d57600080fd5b5061009860048036038101906100939190610523565b61011b565b005b6100b460048036038101906100af9190610696565b610139565b005b3480156100c257600080fd5b506100cb610149565b6040516100d8919061070b565b60405180910390f35b3480156100ed57600080fd5b506100f661015a565b005b34801561010457600080fd5b5061010d610166565b005b6101196000610172565b565b610136816040518060200160405280600081525060006101ce565b50565b610145828260006101ce565b5050565b600061015560006101fa565b905090565b6101646000610208565b565b610170600061021e565b565b600081600001549050600081116101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590610783565b60405180910390fd5b6001810382600001819055505050565b6101d78361022b565b6000825111806101e45750805b156101f5576101f3838361027a565b505b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000816000018190555050565b610234816102a7565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061029f83836040518060600160405280602781526020016109bf60279139610360565b905092915050565b6102b08161042d565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610815565b60405180910390fd5b8061031c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610440565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061036b8461042d565b6103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a1906108a7565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516103d29190610941565b600060405180830381855af49150503d806000811461040d576040519150601f19603f3d011682016040523d82523d6000602084013e610412565b606091505b509150915061042282828661044a565b925050509392505050565b600080823b905060008111915050919050565b6000819050919050565b6060831561045a578290506104aa565b60008351111561046d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a1919061099c565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008135905061051d816104f7565b92915050565b600060208284031215610539576105386104bb565b5b60006105478482850161050e565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105a38261055a565b810181811067ffffffffffffffff821117156105c2576105c161056b565b5b80604052505050565b60006105d56104b1565b90506105e1828261059a565b919050565b600067ffffffffffffffff8211156106015761060061056b565b5b61060a8261055a565b9050602081019050919050565b82818337600083830152505050565b6000610639610634846105e6565b6105cb565b90508281526020810184848401111561065557610654610555565b5b610660848285610617565b509392505050565b600082601f83011261067d5761067c610550565b5b813561068d848260208601610626565b91505092915050565b600080604083850312156106ad576106ac6104bb565b5b60006106bb8582860161050e565b925050602083013567ffffffffffffffff8111156106dc576106db6104c0565b5b6106e885828601610668565b9150509250929050565b6000819050919050565b610705816106f2565b82525050565b600060208201905061072060008301846106fc565b92915050565b600082825260208201905092915050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b600061076d601b83610726565b915061077882610737565b602082019050919050565b6000602082019050818103600083015261079c81610760565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006107ff602d83610726565b915061080a826107a3565b604082019050919050565b6000602082019050818103600083015261082e816107f2565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000610891602683610726565b915061089c82610835565b604082019050919050565b600060208201905081810360008301526108c081610884565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156108fb5780820151818401526020810190506108e0565b8381111561090a576000848401525b50505050565b600061091b826108c7565b61092581856108d2565b93506109358185602086016108dd565b80840191505092915050565b600061094d8284610910565b915081905092915050565b600081519050919050565b600061096e82610958565b6109788185610726565b93506109888185602086016108dd565b6109918161055a565b840191505092915050565b600060208201905081810360008301526109b68184610963565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e4393776dafd0f40db2201d01b99ea4c0d6ed73c4d628d19b13741da95177e3164736f6c63430008090033";

type UUPSUpgradeableUnsafeMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSUpgradeableUnsafeMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSUpgradeableUnsafeMock__factory extends ContractFactory {
  constructor(...args: UUPSUpgradeableUnsafeMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UUPSUpgradeableUnsafeMock> {
    return super.deploy(overrides || {}) as Promise<UUPSUpgradeableUnsafeMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UUPSUpgradeableUnsafeMock {
    return super.attach(address) as UUPSUpgradeableUnsafeMock;
  }
  override connect(signer: Signer): UUPSUpgradeableUnsafeMock__factory {
    return super.connect(signer) as UUPSUpgradeableUnsafeMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSUpgradeableUnsafeMockInterface {
    return new utils.Interface(_abi) as UUPSUpgradeableUnsafeMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSUpgradeableUnsafeMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UUPSUpgradeableUnsafeMock;
  }
}
