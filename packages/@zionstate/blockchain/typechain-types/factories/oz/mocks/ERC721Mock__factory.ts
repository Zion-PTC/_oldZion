/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../../oz/mocks/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d9238038062002d928339818101604052810190620000379190620002c2565b818181600090805190602001906200005192919062000075565b5080600190805190602001906200006a92919062000075565b5050505050620003ac565b828054620000839062000376565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018e8262000143565b810181811067ffffffffffffffff82111715620001b057620001af62000154565b5b80604052505050565b6000620001c562000125565b9050620001d3828262000183565b919050565b600067ffffffffffffffff821115620001f657620001f562000154565b5b620002018262000143565b9050602081019050919050565b60005b838110156200022e57808201518184015260208101905062000211565b838111156200023e576000848401525b50505050565b60006200025b6200025584620001d8565b620001b9565b9050828152602081018484840111156200027a57620002796200013e565b5b620002878482856200020e565b509392505050565b600082601f830112620002a757620002a662000139565b5b8151620002b984826020860162000244565b91505092915050565b60008060408385031215620002dc57620002db6200012f565b5b600083015167ffffffffffffffff811115620002fd57620002fc62000134565b5b6200030b858286016200028f565b925050602083015167ffffffffffffffff8111156200032f576200032e62000134565b5b6200033d858286016200028f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038f57607f821691505b60208210811415620003a657620003a562000347565b5b50919050565b6129d680620003bc6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a144819411610071578063a144819414610318578063a22cb46514610334578063b88d4fde14610350578063c87b56dd1461036c578063e985e9c51461039c57610121565b80636352211e146102605780636c0360eb1461029057806370a08231146102ae5780638832e6e3146102de57806395d89b41146102fa57610121565b806323b872dd116100f457806323b872dd146101c057806340c10f19146101dc57806342842e0e146101f857806342966c68146102145780634f558e791461023057610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b91906118ea565b6103cc565b60405161014d9190611932565b60405180910390f35b61015e6104ae565b60405161016b91906119e6565b60405180910390f35b61018e60048036038101906101899190611a3e565b610540565b60405161019b9190611aac565b60405180910390f35b6101be60048036038101906101b99190611af3565b6105c5565b005b6101da60048036038101906101d59190611b33565b6106dd565b005b6101f660048036038101906101f19190611af3565b61073d565b005b610212600480360381019061020d9190611b33565b61074b565b005b61022e60048036038101906102299190611a3e565b61076b565b005b61024a60048036038101906102459190611a3e565b610777565b6040516102579190611932565b60405180910390f35b61027a60048036038101906102759190611a3e565b610789565b6040516102879190611aac565b60405180910390f35b61029861083b565b6040516102a591906119e6565b60405180910390f35b6102c860048036038101906102c39190611b86565b61084a565b6040516102d59190611bc2565b60405180910390f35b6102f860048036038101906102f39190611d12565b610902565b005b610302610912565b60405161030f91906119e6565b60405180910390f35b610332600480360381019061032d9190611af3565b6109a4565b005b61034e60048036038101906103499190611dad565b6109b2565b005b61036a60048036038101906103659190611ded565b6109c8565b005b61038660048036038101906103819190611a3e565b610a2a565b60405161039391906119e6565b60405180910390f35b6103b660048036038101906103b19190611e70565b610ad1565b6040516103c39190611932565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a757506104a682610b65565b5b9050919050565b6060600080546104bd90611edf565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990611edf565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b5050505050905090565b600061054b82610bcf565b61058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611f83565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d082610789565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063890612015565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610660610c3b565b73ffffffffffffffffffffffffffffffffffffffff16148061068f575061068e81610689610c3b565b610ad1565b5b6106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c5906120a7565b60405180910390fd5b6106d88383610c43565b505050565b6106ee6106e8610c3b565b82610cfc565b61072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072490612139565b60405180910390fd5b610738838383610dda565b505050565b6107478282611036565b5050565b610766838383604051806020016040528060008152506109c8565b505050565b61077481611204565b50565b600061078282610bcf565b9050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610832576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610829906121cb565b60405180910390fd5b80915050919050565b6060610845611315565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b29061225d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61090d83838361132c565b505050565b60606001805461092190611edf565b80601f016020809104026020016040519081016040528092919081815260200182805461094d90611edf565b801561099a5780601f1061096f5761010080835404028352916020019161099a565b820191906000526020600020905b81548152906001019060200180831161097d57829003601f168201915b5050505050905090565b6109ae8282611387565b5050565b6109c46109bd610c3b565b83836113a5565b5050565b6109d96109d3610c3b565b83610cfc565b610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f90612139565b60405180910390fd5b610a2484848484611512565b50505050565b6060610a3582610bcf565b610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b906122ef565b60405180910390fd5b6000610a7e611315565b90506000815111610a9e5760405180602001604052806000815250610ac9565b80610aa88461156e565b604051602001610ab992919061234b565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610cb683610789565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d0782610bcf565b610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d906123e1565b60405180910390fd5b6000610d5183610789565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610dc057508373ffffffffffffffffffffffffffffffffffffffff16610da884610540565b73ffffffffffffffffffffffffffffffffffffffff16145b80610dd15750610dd08185610ad1565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610dfa82610789565b73ffffffffffffffffffffffffffffffffffffffff1614610e50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4790612473565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb790612505565b60405180910390fd5b610ecb8383836116cf565b610ed6600082610c43565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f269190612554565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7d9190612588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d9061262a565b60405180910390fd5b6110af81610bcf565b156110ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e690612696565b60405180910390fd5b6110fb600083836116cf565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114b9190612588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061120f82610789565b905061121d816000846116cf565b611228600083610c43565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112789190612554565b925050819055506002600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b606060405180602001604052806000815250905090565b6113368383611036565b61134360008484846116d4565b611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137990612728565b60405180910390fd5b505050565b6113a182826040518060200160405280600081525061132c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140b90612794565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115059190611932565b60405180910390a3505050565b61151d848484610dda565b611529848484846116d4565b611568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155f90612728565b60405180910390fd5b50505050565b606060008214156115b6576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506116ca565b600082905060005b600082146115e85780806115d1906127b4565b915050600a826115e1919061282c565b91506115be565b60008167ffffffffffffffff81111561160457611603611be7565b5b6040519080825280601f01601f1916602001820160405280156116365781602001600182028036833780820191505090505b5090505b600085146116c35760018261164f9190612554565b9150600a8561165e919061285d565b603061166a9190612588565b60f81b8183815181106116805761167f61288e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116bc919061282c565b945061163a565b8093505050505b919050565b505050565b60006116f58473ffffffffffffffffffffffffffffffffffffffff1661186b565b1561185e578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261171e610c3b565b8786866040518563ffffffff1660e01b81526004016117409493929190612912565b602060405180830381600087803b15801561175a57600080fd5b505af192505050801561178b57506040513d601f19601f820116820180604052508101906117889190612973565b60015b61180e573d80600081146117bb576040519150601f19603f3d011682016040523d82523d6000602084013e6117c0565b606091505b50600081511415611806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fd90612728565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611863565b600190505b949350505050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118c781611892565b81146118d257600080fd5b50565b6000813590506118e4816118be565b92915050565b600060208284031215611900576118ff611888565b5b600061190e848285016118d5565b91505092915050565b60008115159050919050565b61192c81611917565b82525050565b60006020820190506119476000830184611923565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198757808201518184015260208101905061196c565b83811115611996576000848401525b50505050565b6000601f19601f8301169050919050565b60006119b88261194d565b6119c28185611958565b93506119d2818560208601611969565b6119db8161199c565b840191505092915050565b60006020820190508181036000830152611a0081846119ad565b905092915050565b6000819050919050565b611a1b81611a08565b8114611a2657600080fd5b50565b600081359050611a3881611a12565b92915050565b600060208284031215611a5457611a53611888565b5b6000611a6284828501611a29565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a9682611a6b565b9050919050565b611aa681611a8b565b82525050565b6000602082019050611ac16000830184611a9d565b92915050565b611ad081611a8b565b8114611adb57600080fd5b50565b600081359050611aed81611ac7565b92915050565b60008060408385031215611b0a57611b09611888565b5b6000611b1885828601611ade565b9250506020611b2985828601611a29565b9150509250929050565b600080600060608486031215611b4c57611b4b611888565b5b6000611b5a86828701611ade565b9350506020611b6b86828701611ade565b9250506040611b7c86828701611a29565b9150509250925092565b600060208284031215611b9c57611b9b611888565b5b6000611baa84828501611ade565b91505092915050565b611bbc81611a08565b82525050565b6000602082019050611bd76000830184611bb3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c1f8261199c565b810181811067ffffffffffffffff82111715611c3e57611c3d611be7565b5b80604052505050565b6000611c5161187e565b9050611c5d8282611c16565b919050565b600067ffffffffffffffff821115611c7d57611c7c611be7565b5b611c868261199c565b9050602081019050919050565b82818337600083830152505050565b6000611cb5611cb084611c62565b611c47565b905082815260208101848484011115611cd157611cd0611be2565b5b611cdc848285611c93565b509392505050565b600082601f830112611cf957611cf8611bdd565b5b8135611d09848260208601611ca2565b91505092915050565b600080600060608486031215611d2b57611d2a611888565b5b6000611d3986828701611ade565b9350506020611d4a86828701611a29565b925050604084013567ffffffffffffffff811115611d6b57611d6a61188d565b5b611d7786828701611ce4565b9150509250925092565b611d8a81611917565b8114611d9557600080fd5b50565b600081359050611da781611d81565b92915050565b60008060408385031215611dc457611dc3611888565b5b6000611dd285828601611ade565b9250506020611de385828601611d98565b9150509250929050565b60008060008060808587031215611e0757611e06611888565b5b6000611e1587828801611ade565b9450506020611e2687828801611ade565b9350506040611e3787828801611a29565b925050606085013567ffffffffffffffff811115611e5857611e5761188d565b5b611e6487828801611ce4565b91505092959194509250565b60008060408385031215611e8757611e86611888565b5b6000611e9585828601611ade565b9250506020611ea685828601611ade565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ef757607f821691505b60208210811415611f0b57611f0a611eb0565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611f6d602c83611958565b9150611f7882611f11565b604082019050919050565b60006020820190508181036000830152611f9c81611f60565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611fff602183611958565b915061200a82611fa3565b604082019050919050565b6000602082019050818103600083015261202e81611ff2565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000612091603883611958565b915061209c82612035565b604082019050919050565b600060208201905081810360008301526120c081612084565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000612123603183611958565b915061212e826120c7565b604082019050919050565b6000602082019050818103600083015261215281612116565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b60006121b5602983611958565b91506121c082612159565b604082019050919050565b600060208201905081810360008301526121e4816121a8565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000612247602a83611958565b9150612252826121eb565b604082019050919050565b600060208201905081810360008301526122768161223a565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006122d9602f83611958565b91506122e48261227d565b604082019050919050565b60006020820190508181036000830152612308816122cc565b9050919050565b600081905092915050565b60006123258261194d565b61232f818561230f565b935061233f818560208601611969565b80840191505092915050565b6000612357828561231a565b9150612363828461231a565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006123cb602c83611958565b91506123d68261236f565b604082019050919050565b600060208201905081810360008301526123fa816123be565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b600061245d602983611958565b915061246882612401565b604082019050919050565b6000602082019050818103600083015261248c81612450565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006124ef602483611958565b91506124fa82612493565b604082019050919050565b6000602082019050818103600083015261251e816124e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255f82611a08565b915061256a83611a08565b92508282101561257d5761257c612525565b5b828203905092915050565b600061259382611a08565b915061259e83611a08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125d3576125d2612525565b5b828201905092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612614602083611958565b915061261f826125de565b602082019050919050565b6000602082019050818103600083015261264381612607565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612680601c83611958565b915061268b8261264a565b602082019050919050565b600060208201905081810360008301526126af81612673565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612712603283611958565b915061271d826126b6565b604082019050919050565b6000602082019050818103600083015261274181612705565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061277e601983611958565b915061278982612748565b602082019050919050565b600060208201905081810360008301526127ad81612771565b9050919050565b60006127bf82611a08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127f2576127f1612525565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061283782611a08565b915061284283611a08565b925082612852576128516127fd565b5b828204905092915050565b600061286882611a08565b915061287383611a08565b925082612883576128826127fd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006128e4826128bd565b6128ee81856128c8565b93506128fe818560208601611969565b6129078161199c565b840191505092915050565b60006080820190506129276000830187611a9d565b6129346020830186611a9d565b6129416040830185611bb3565b818103606083015261295381846128d9565b905095945050505050565b60008151905061296d816118be565b92915050565b60006020828403121561298957612988611888565b5b60006129978482850161295e565b9150509291505056fea264697066735822122055e986712a87a001729ea8f4751d3de4a321eb6cbe0a7257258aaf23a00b6b5f64736f6c63430008090033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC721Mock>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  override connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
