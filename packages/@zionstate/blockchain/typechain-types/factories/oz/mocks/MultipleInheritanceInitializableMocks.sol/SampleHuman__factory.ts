/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SampleHuman,
  SampleHumanInterface,
} from "../../../../oz/mocks/MultipleInheritanceInitializableMocks.sol/SampleHuman";

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610279806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a6c9db61461003b5780638129fc1c14610059575b600080fd5b610043610063565b6040516100509190610185565b60405180910390f35b610061610076565b005b600060029054906101000a900460ff1681565b600060019054906101000a900460ff168061009c575060008054906101000a900460ff16155b6100db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d290610223565b60405180910390fd5b60008060019054906101000a900460ff16159050801561012b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001600060026101000a81548160ff02191690831515021790555080156101675760008060016101000a81548160ff0219169083151502179055505b50565b60008115159050919050565b61017f8161016a565b82525050565b600060208201905061019a6000830184610176565b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061020d602e836101a0565b9150610218826101b1565b604082019050919050565b6000602082019050818103600083015261023c81610200565b905091905056fea26469706673582212201ccb33dfbc5a17387b6cd84850641d14e0f1a5c328f0a9fd3a1b8d62399b738664736f6c63430008090033";

type SampleHumanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleHumanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleHuman__factory extends ContractFactory {
  constructor(...args: SampleHumanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SampleHuman> {
    return super.deploy(overrides || {}) as Promise<SampleHuman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SampleHuman {
    return super.attach(address) as SampleHuman;
  }
  override connect(signer: Signer): SampleHuman__factory {
    return super.connect(signer) as SampleHuman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleHumanInterface {
    return new utils.Interface(_abi) as SampleHumanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleHuman {
    return new Contract(address, _abi, signerOrProvider) as SampleHuman;
  }
}
