/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SampleGramps,
  SampleGrampsInterface,
} from "../../../../oz/mocks/MultipleInheritanceInitializableMocks.sol/SampleGramps";

const _abi = [
  {
    inputs: [],
    name: "gramps",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610790806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c1461006f578063f62d188814610079578063fa39851f14610095575b600080fd5b6100596100b3565b60405161006691906103ff565b60405180910390f35b6100776100c6565b005b610093600480360381019061008e9190610574565b6101ba565b005b61009d6102b3565b6040516100aa9190610645565b60405180910390f35b600060029054906101000a900460ff1681565b600060019054906101000a900460ff16806100ec575060008054906101000a900460ff16155b61012b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610122906106d9565b60405180910390fd5b60008060019054906101000a900460ff16159050801561017b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001600060026101000a81548160ff02191690831515021790555080156101b75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806101e0575060008054906101000a900460ff16155b61021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906106d9565b60405180910390fd5b60008060019054906101000a900460ff16159050801561026f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6102776100c6565b816001908051906020019061028d929190610341565b5080156102af5760008060016101000a81548160ff0219169083151502179055505b5050565b600180546102c090610728565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec90610728565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b505050505081565b82805461034d90610728565b90600052602060002090601f01602090048101928261036f57600085556103b6565b82601f1061038857805160ff19168380011785556103b6565b828001600101855582156103b6579182015b828111156103b557825182559160200191906001019061039a565b5b5090506103c391906103c7565b5090565b5b808211156103e05760008160009055506001016103c8565b5090565b60008115159050919050565b6103f9816103e4565b82525050565b600060208201905061041460008301846103f0565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61048182610438565b810181811067ffffffffffffffff821117156104a05761049f610449565b5b80604052505050565b60006104b361041a565b90506104bf8282610478565b919050565b600067ffffffffffffffff8211156104df576104de610449565b5b6104e882610438565b9050602081019050919050565b82818337600083830152505050565b6000610517610512846104c4565b6104a9565b90508281526020810184848401111561053357610532610433565b5b61053e8482856104f5565b509392505050565b600082601f83011261055b5761055a61042e565b5b813561056b848260208601610504565b91505092915050565b60006020828403121561058a57610589610424565b5b600082013567ffffffffffffffff8111156105a8576105a7610429565b5b6105b484828501610546565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105f75780820151818401526020810190506105dc565b83811115610606576000848401525b50505050565b6000610617826105bd565b61062181856105c8565b93506106318185602086016105d9565b61063a81610438565b840191505092915050565b6000602082019050818103600083015261065f818461060c565b905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006106c3602e836105c8565b91506106ce82610667565b604082019050919050565b600060208201905081810360008301526106f2816106b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061074057607f821691505b60208210811415610754576107536106f9565b5b5091905056fea26469706673582212202b83a23597f72ba06e0e8c0cc456ff7f437c77d2be8d48884ae8d7c106563b1664736f6c63430008090033";

type SampleGrampsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleGrampsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleGramps__factory extends ContractFactory {
  constructor(...args: SampleGrampsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SampleGramps> {
    return super.deploy(overrides || {}) as Promise<SampleGramps>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SampleGramps {
    return super.attach(address) as SampleGramps;
  }
  override connect(signer: Signer): SampleGramps__factory {
    return super.connect(signer) as SampleGramps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleGrampsInterface {
    return new utils.Interface(_abi) as SampleGrampsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleGramps {
    return new Contract(address, _abi, signerOrProvider) as SampleGramps;
  }
}
