/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VestingWallet,
  VestingWalletInterface,
} from "../../../oz/finance/VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620014c4380380620014c48339818101604052810190620000379190620001ce565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620002b1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508167ffffffffffffffff1660a08167ffffffffffffffff16815250508067ffffffffffffffff1660c08167ffffffffffffffff1681525050505050620002d3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001518262000124565b9050919050565b620001638162000144565b81146200016f57600080fd5b50565b600081519050620001838162000158565b92915050565b600067ffffffffffffffff82169050919050565b620001a88162000189565b8114620001b457600080fd5b50565b600081519050620001c8816200019d565b92915050565b600080600060608486031215620001ea57620001e96200011f565b5b6000620001fa8682870162000172565b93505060206200020d86828701620001b7565b92505060406200022086828701620001b7565b9150509250925092565b600082825260208201905092915050565b7f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b600062000299602a836200022a565b9150620002a6826200023b565b604082019050919050565b60006020820190508181036000830152620002cc816200028a565b9050919050565b60805160a05160c0516111c1620003036000396000610262015260006105050152600061035a01526111c16000f3fe60806040526004361061008a5760003560e01c8063810ec23b11610059578063810ec23b1461015257806386d1a69f1461018f57806396132521146101a65780639852595c146101d1578063be9a65551461020e57610091565b80630a17b06b146100965780630fb5a6b4146100d357806319165587146100fe57806338af3eed1461012757610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906109f9565b610239565b6040516100ca9190610a3f565b60405180910390f35b3480156100df57600080fd5b506100e861025e565b6040516100f59190610a3f565b60405180910390f35b34801561010a57600080fd5b5061012560048036038101906101209190610ab8565b610290565b005b34801561013357600080fd5b5061013c610356565b6040516101499190610af4565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610b0f565b61037e565b6040516101869190610a3f565b60405180910390f35b34801561019b57600080fd5b506101a461042d565b005b3480156101b257600080fd5b506101bb6104af565b6040516101c89190610a3f565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190610ab8565b6104b8565b6040516102059190610a3f565b60405180910390f35b34801561021a57600080fd5b50610223610501565b6040516102309190610a3f565b60405180910390f35b60006102576102466104af565b476102519190610b7e565b83610533565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061029b826104b8565b6102a5834261037e565b6102af9190610bd4565b905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103009190610b7e565b925050819055507fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b8282604051610338929190610c08565b60405180910390a16103528261034c610356565b836105cd565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061042561038c846104b8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103c59190610af4565b60206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190610c5d565b61041f9190610b7e565b83610533565b905092915050565b60006104376104af565b61044042610239565b61044a9190610bd4565b90508060008082825461045d9190610b7e565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516104939190610a3f565b60405180910390a16104ac6104a6610356565b82610653565b50565b60008054905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061053d610501565b8267ffffffffffffffff16101561055757600090506105c7565b61055f61025e565b610567610501565b6105719190610b7e565b8267ffffffffffffffff16111561058a578290506105c7565b61059261025e565b61059a610501565b8367ffffffffffffffff166105af9190610bd4565b846105ba9190610c8a565b6105c49190610d13565b90505b92915050565b61064e8363a9059cbb60e01b84846040516024016105ec929190610c08565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610747565b505050565b80471015610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068d90610da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516106bc90610df2565b60006040518083038185875af1925050503d80600081146106f9576040519150601f19603f3d011682016040523d82523d6000602084013e6106fe565b606091505b5050905080610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990610e79565b60405180910390fd5b505050565b60006107a9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661080e9092919063ffffffff16565b905060008151111561080957808060200190518101906107c99190610ed1565b610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff90610f70565b60405180910390fd5b5b505050565b606061081d8484600085610826565b90509392505050565b60608247101561086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290611002565b60405180910390fd5b6108748561093a565b6108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa9061106e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108dc91906110fd565b60006040518083038185875af1925050503d8060008114610919576040519150601f19603f3d011682016040523d82523d6000602084013e61091e565b606091505b509150915061092e82828661094d565b92505050949350505050565b600080823b905060008111915050919050565b6060831561095d578290506109ad565b6000835111156109705782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a49190611169565b60405180910390fd5b9392505050565b600080fd5b600067ffffffffffffffff82169050919050565b6109d6816109b9565b81146109e157600080fd5b50565b6000813590506109f3816109cd565b92915050565b600060208284031215610a0f57610a0e6109b4565b5b6000610a1d848285016109e4565b91505092915050565b6000819050919050565b610a3981610a26565b82525050565b6000602082019050610a546000830184610a30565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8582610a5a565b9050919050565b610a9581610a7a565b8114610aa057600080fd5b50565b600081359050610ab281610a8c565b92915050565b600060208284031215610ace57610acd6109b4565b5b6000610adc84828501610aa3565b91505092915050565b610aee81610a7a565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b60008060408385031215610b2657610b256109b4565b5b6000610b3485828601610aa3565b9250506020610b45858286016109e4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8982610a26565b9150610b9483610a26565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bc957610bc8610b4f565b5b828201905092915050565b6000610bdf82610a26565b9150610bea83610a26565b925082821015610bfd57610bfc610b4f565b5b828203905092915050565b6000604082019050610c1d6000830185610ae5565b610c2a6020830184610a30565b9392505050565b610c3a81610a26565b8114610c4557600080fd5b50565b600081519050610c5781610c31565b92915050565b600060208284031215610c7357610c726109b4565b5b6000610c8184828501610c48565b91505092915050565b6000610c9582610a26565b9150610ca083610a26565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd957610cd8610b4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1e82610a26565b9150610d2983610a26565b925082610d3957610d38610ce4565b5b828204905092915050565b600082825260208201905092915050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000610d8b601d83610d44565b9150610d9682610d55565b602082019050919050565b60006020820190508181036000830152610dba81610d7e565b9050919050565b600081905092915050565b50565b6000610ddc600083610dc1565b9150610de782610dcc565b600082019050919050565b6000610dfd82610dcf565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000610e63603a83610d44565b9150610e6e82610e07565b604082019050919050565b60006020820190508181036000830152610e9281610e56565b9050919050565b60008115159050919050565b610eae81610e99565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b600060208284031215610ee757610ee66109b4565b5b6000610ef584828501610ebc565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610f5a602a83610d44565b9150610f6582610efe565b604082019050919050565b60006020820190508181036000830152610f8981610f4d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610fec602683610d44565b9150610ff782610f90565b604082019050919050565b6000602082019050818103600083015261101b81610fdf565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611058601d83610d44565b915061106382611022565b602082019050919050565b600060208201905081810360008301526110878161104b565b9050919050565b600081519050919050565b60005b838110156110b757808201518184015260208101905061109c565b838111156110c6576000848401525b50505050565b60006110d78261108e565b6110e18185610dc1565b93506110f1818560208601611099565b80840191505092915050565b600061110982846110cc565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061113b82611114565b6111458185610d44565b9350611155818560208601611099565b61115e8161111f565b840191505092915050565b600060208201905081810360008301526111838184611130565b90509291505056fea2646970667358221220c92d3787b81d5ab6120ef506544de146c4361a5110e008bf699cc18deaadcdde64736f6c63430008090033";

type VestingWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingWallet__factory extends ContractFactory {
  constructor(...args: VestingWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    beneficiaryAddress: PromiseOrValue<string>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestingWallet> {
    return super.deploy(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<VestingWallet>;
  }
  override getDeployTransaction(
    beneficiaryAddress: PromiseOrValue<string>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  override attach(address: string): VestingWallet {
    return super.attach(address) as VestingWallet;
  }
  override connect(signer: Signer): VestingWallet__factory {
    return super.connect(signer) as VestingWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new utils.Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingWallet {
    return new Contract(address, _abi, signerOrProvider) as VestingWallet;
  }
}
