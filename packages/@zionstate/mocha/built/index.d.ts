import moc, { AsyncFunc as mocAsyncFunc, Context as mocContext, Done as mocDone, ExclusiveSuiteFunction as mocExclusiveSuiteFunction, ExclusiveTestFunction as mocExclusiveTestFunction, Func as mocFunc, Hook as mocHook, HookFunction as mocHookFunction, Interface as mocInterface, InterfaceContributions as mocInterfaceContributions, MochaGlobals as mocMochaGlobals, MochaInstanceOptions as mocMochaInstanceOptions, MochaOptions as mocMochaOptions, PendingSuiteFunction as mocPendingSuiteFunction, PendingTestFunction as mocPendingTestFunction, Reporter as mocReporter, ReporterConstructor as mocReporterConstructor, ReporterContributions as mocReporterContributions, RootHookObject as mocRootHookObject, Runnable as mocRunnable, Runner as mocRunner, RunnerConstants as mocRunnerConstants, RunnerOptions as mocRunnerOptions, Stats as mocStats, Suite as mocSuite, SuiteConstants as mocSuiteConstants, SuiteFunction as mocSuiteFunction, Test as mocTest, TestFunction as mocTestFunction, TestInterface as mocTestInterface } from 'mocha';
export declare type AsyncFunc = mocAsyncFunc;
export declare type Context = mocContext;
export declare type Done = mocDone;
export declare type ExclusiveSuiteFunction = mocExclusiveSuiteFunction;
export declare type ExclusiveTestFunction = mocExclusiveTestFunction;
export declare type Func = mocFunc;
export declare type Hook = mocHook;
export declare type HookFunction = mocHookFunction;
export declare type Interface = mocInterface;
export declare type InterfaceContributions = mocInterfaceContributions;
export declare type MochaGlobals = mocMochaGlobals;
export declare type MochaInstanceOptions = mocMochaInstanceOptions;
export declare type MochaOptions = mocMochaOptions;
export declare type PendingSuiteFunction = mocPendingSuiteFunction;
export declare type PendingTestFunction = mocPendingTestFunction;
export declare type Reporter = mocReporter;
export declare type ReporterConstructor = mocReporterConstructor;
export declare type ReporterContributions = mocReporterContributions;
export declare type RootHookObject = mocRootHookObject;
export declare type Runnable = mocRunnable;
export declare type Runner = mocRunner;
export declare type RunnerConstants = mocRunnerConstants;
export declare type RunnerOptions = mocRunnerOptions;
export declare type Stats = mocStats;
export declare type Suite = mocSuite;
export declare type SuiteConstants = mocSuiteConstants;
export declare type SuiteFunction = mocSuiteFunction;
export declare type Test = mocTest;
export declare type TestFunction = mocTestFunction;
export declare type TestInterface = mocTestInterface;
declare let exportObj: {
    after: moc.HookFunction;
    afterEach: moc.HookFunction;
    before: moc.HookFunction;
    beforeEach: moc.HookFunction;
    describe: moc.SuiteFunction;
    interfaces: typeof moc.interfaces;
    it: moc.TestFunction;
    prototype: moc;
    reporters: typeof moc.reporters;
    run: typeof moc.run;
    setup: moc.HookFunction;
    suite: moc.SuiteFunction;
    suiteSetup: moc.HookFunction;
    suiteTeardown: moc.HookFunction;
    teardown: moc.HookFunction;
    test: moc.TestFunction;
    utils: typeof moc.utils;
    xit: moc.PendingTestFunction;
};
export default exportObj;
