import { FunctionComponent } from 'react';
import * as styled from 'styled-components';
import { AnyStyledComponent as styledAnyStyledComponent, BaseThemeProviderComponent as styledBaseThemeProviderComponent, BaseThemedCssFunction as styledBaseThemedCssFunction, BaseWithThemeFnInterface as styledBaseWithThemeFnInterface, CSSKeyframes as styledCSSKeyframes, CSSObject as styledCSSObject, CSSProp as styledCSSProp, CSSProperties as styledCSSProperties, CSSPseudos as styledCSSPseudos, DefaultTheme as styledDefaultTheme, FalseyValue as styledFalseyValue, FlattenInterpolation as styledFlattenInterpolation, FlattenSimpleInterpolation as styledFlattenSimpleInterpolation, GlobalStyleComponent as styledGlobalStyleComponent, Interpolation as styledInterpolation, InterpolationFunction as styledInterpolationFunction, InterpolationValue as styledInterpolationValue, IntrinsicElementsKeys as styledIntrinsicElementsKeys, Keyframes as styledKeyframes, OmitU as styledOmitU, StyledComponentInnerOtherProps as styledStyledComponentInnerOtherProps, PickU as styledPickU, SimpleInterpolation as styledSimpleInterpolation, StyleSheetManagerProps as styledStyleSheetManagerProps, StyledComponent as styledStyledComponent, StyledComponentBase as styledStyledComponentBase, StyledComponentInnerAttrs as styledStyledComponentInnerAttrs, StyledComponentInnerComponent as styledStyledComponentInnerComponent, StyledComponentProps as styledStyledComponentProps, StyledComponentPropsWithRef as styledStyledComponentPropsWithRef, StyledConfig as styledStyledConfig, StyledFunction as styledStyledFunction, StyledInterface as styledStyledInterface, StyledProps as styledStyledProps, StylisPlugin as styledStylisPlugin, ThemeProps as styledThemeProps, ThemeProviderComponent as styledThemeProviderComponent, ThemeProviderProps as styledThemeProviderProps, ThemedBaseStyledInterface as styledThemedBaseStyledInterface, ThemedCssFunction as styledThemedCssFunction, ThemedGlobalStyledClassProps as styledThemedGlobalStyledClassProps, ThemedStyledComponentsModule as styledThemedStyledComponentsModule, ThemedStyledFunction as styledThemedStyledFunction, ThemedStyledFunctionBase as styledThemedStyledFunctionBase, ThemedStyledInterface as styledThemedStyledInterface, ThemedStyledProps as styledThemedStyledProps, WithThemeFnInterface as styledWithThemeFnInterface } from 'styled-components';
export declare let withTheme: styled.WithThemeFnInterface<styled.DefaultTheme>;
export declare type AnyStyledComponent = styledAnyStyledComponent;
export declare type BaseThemeProviderComponent<T extends object> = styledBaseThemeProviderComponent<T>;
export declare type BaseThemedCssFunction<T extends object> = styledBaseThemedCssFunction<T>;
export declare type BaseWithThemeFnInterface<T extends object> = styledBaseWithThemeFnInterface<T>;
export declare type CSSKeyframes = styledCSSKeyframes;
export declare type CSSObject = styledCSSObject;
export declare type CSSProp = styledCSSProp;
export declare type CSSProperties = styledCSSProperties;
export declare type CSSPseudos = styledCSSPseudos;
export declare type DefaultTheme = styledDefaultTheme;
export declare type FalseyValue = styledFalseyValue;
export declare type FlattenInterpolation<T extends object> = styledFlattenInterpolation<T>;
export declare type FlattenSimpleInterpolation = styledFlattenSimpleInterpolation;
export declare type GlobalStyleComponent<T extends object, R> = styledGlobalStyleComponent<T, R>;
export declare type Interpolation<T extends object> = styledInterpolation<T>;
export declare type InterpolationFunction<T extends object> = styledInterpolationFunction<T>;
export declare type InterpolationValue = styledInterpolationValue;
export declare type IntrinsicElementsKeys = styledIntrinsicElementsKeys;
export declare type Keyframes = styledKeyframes;
export declare type OmitU<T, K extends keyof T> = styledOmitU<T, K>;
export declare type StyledComponentInnerOtherProps<T extends AnyStyledComponent> = styledStyledComponentInnerOtherProps<T>;
export declare type PickU<T, K extends keyof T> = styledPickU<T, K>;
export declare type SimpleInterpolation = styledSimpleInterpolation;
export declare type StyleSheetManagerProps = styledStyleSheetManagerProps;
export declare type StyledComponent<C extends FunctionComponent, T extends object, O extends object, A extends string | number | symbol> = styledStyledComponent<C, T, O, A>;
export declare type StyledComponentBase<C extends FunctionComponent, T extends object, O extends object, A extends string | number | symbol> = styledStyledComponentBase<C, T, O, A>;
export declare type StyledComponentInnerAttrs<C extends AnyStyledComponent> = styledStyledComponentInnerAttrs<C>;
export declare type StyledComponentInnerComponent<T extends FunctionComponent> = styledStyledComponentInnerComponent<T>;
export declare type StyledComponentProps<C extends FunctionComponent, T extends object, O extends object, A extends string | number | symbol> = styledStyledComponentProps<C, T, O, A>;
export declare type StyledComponentPropsWithRef<T extends FunctionComponent> = styledStyledComponentPropsWithRef<T>;
export declare type StyledConfig = styledStyledConfig;
export declare type StyledFunction<T extends FunctionComponent> = styledStyledFunction<T>;
export declare type StyledInterface = styledStyledInterface;
export declare type StyledProps<T> = styledStyledProps<T>;
export declare type StylisPlugin = styledStylisPlugin;
export declare type ThemeProps<T> = styledThemeProps<T>;
export declare type ThemeProviderComponent<T extends object> = styledThemeProviderComponent<T>;
export declare type ThemeProviderProps<T extends object> = styledThemeProviderProps<T>;
export declare type ThemedBaseStyledInterface<T extends object> = styledThemedBaseStyledInterface<T>;
export declare type ThemedCssFunction<T extends object> = styledThemedCssFunction<T>;
export declare type ThemedGlobalStyledClassProps<P, T> = styledThemedGlobalStyledClassProps<P, T>;
export declare type ThemedStyledComponentsModule<T extends object, U extends object> = styledThemedStyledComponentsModule<T, U>;
export declare type ThemedStyledFunction<C extends FunctionComponent, T extends object, O extends object, A extends string | number | symbol> = styledThemedStyledFunction<C, T, O, A>;
export declare type ThemedStyledFunctionBase<C extends FunctionComponent, T extends object, O extends object, A extends string | number | symbol> = styledThemedStyledFunctionBase<C, T, O, A>;
export declare type ThemedStyledInterface<T extends object> = styledThemedStyledInterface<T>;
export declare type ThemedStyledProps<P, T> = styledThemedStyledProps<P, T>;
export declare type WithThemeFnInterface<T extends object> = styledWithThemeFnInterface<T>;
export declare let createGlobalStyle: typeof styled.createGlobalStyle;
export declare let css: styled.ThemedCssFunction<styled.DefaultTheme>;
export declare let isStyledComponent: typeof styled.isStyledComponent;
export declare let keyframes: typeof styled.keyframes;
export declare let useTheme: typeof styled.useTheme;
export declare let ServerStyleSheet: typeof styled.ServerStyleSheet;
export declare let StyleSheetManager: typeof styled.StyleSheetManager;
export declare let ThemeConsumer: import("react").Consumer<any>;
export declare let ThemeContext: import("react").Context<any>;
export declare let ThemeProvider: styled.ThemeProviderComponent<any, any>;
export declare let a: styled.ThemedStyledFunction<"a", any, {}, never>;
export declare let abbr: styled.ThemedStyledFunction<"abbr", any, {}, never>;
export declare let address: styled.ThemedStyledFunction<"address", any, {}, never>;
export declare let animate: styled.ThemedStyledFunction<"animate", any, {}, never>;
export declare let animateMotion: styled.ThemedStyledFunction<"animateMotion", any, {}, never>;
export declare let animateTransform: styled.ThemedStyledFunction<"animateTransform", any, {}, never>;
export declare let area: styled.ThemedStyledFunction<"area", any, {}, never>;
export declare let article: styled.ThemedStyledFunction<"article", any, {}, never>;
export declare let aside: styled.ThemedStyledFunction<"aside", any, {}, never>;
export declare let audio: styled.ThemedStyledFunction<"audio", any, {}, never>;
export declare let b: styled.ThemedStyledFunction<"b", any, {}, never>;
export declare let base: styled.ThemedStyledFunction<"base", any, {}, never>;
export declare let bdi: styled.ThemedStyledFunction<"bdi", any, {}, never>;
export declare let bdo: styled.ThemedStyledFunction<"bdo", any, {}, never>;
export declare let big: styled.ThemedStyledFunction<"big", any, {}, never>;
export declare let blockquote: styled.ThemedStyledFunction<"blockquote", any, {}, never>;
export declare let body: styled.ThemedStyledFunction<"body", any, {}, never>;
export declare let br: styled.ThemedStyledFunction<"br", any, {}, never>;
export declare let button: styled.ThemedStyledFunction<"button", any, {}, never>;
export declare let canvas: styled.ThemedStyledFunction<"canvas", any, {}, never>;
export declare let caption: styled.ThemedStyledFunction<"caption", any, {}, never>;
export declare let circle: styled.ThemedStyledFunction<"circle", any, {}, never>;
export declare let cite: styled.ThemedStyledFunction<"cite", any, {}, never>;
export declare let clipPath: styled.ThemedStyledFunction<"clipPath", any, {}, never>;
export declare let code: styled.ThemedStyledFunction<"code", any, {}, never>;
export declare let col: styled.ThemedStyledFunction<"col", any, {}, never>;
export declare let colgroup: styled.ThemedStyledFunction<"colgroup", any, {}, never>;
export declare let data: styled.ThemedStyledFunction<"data", any, {}, never>;
export declare let datalist: styled.ThemedStyledFunction<"datalist", any, {}, never>;
export declare let dd: styled.ThemedStyledFunction<"dd", any, {}, never>;
export declare let defs: styled.ThemedStyledFunction<"defs", any, {}, never>;
export declare let del: styled.ThemedStyledFunction<"del", any, {}, never>;
export declare let desc: styled.ThemedStyledFunction<"desc", any, {}, never>;
export declare let details: styled.ThemedStyledFunction<"details", any, {}, never>;
export declare let dfn: styled.ThemedStyledFunction<"dfn", any, {}, never>;
export declare let dialog: styled.ThemedStyledFunction<"dialog", any, {}, never>;
export declare let div: styled.ThemedStyledFunction<"div", any, {}, never>;
export declare let dl: styled.ThemedStyledFunction<"dl", any, {}, never>;
export declare let dt: styled.ThemedStyledFunction<"dt", any, {}, never>;
export declare let ellipse: styled.ThemedStyledFunction<"ellipse", any, {}, never>;
export declare let em: styled.ThemedStyledFunction<"em", any, {}, never>;
export declare let embed: styled.ThemedStyledFunction<"embed", any, {}, never>;
export declare let feBlend: styled.ThemedStyledFunction<"feBlend", any, {}, never>;
export declare let feColorMatrix: styled.ThemedStyledFunction<"feColorMatrix", any, {}, never>;
export declare let feComponentTransfer: styled.ThemedStyledFunction<"feComponentTransfer", any, {}, never>;
export declare let feComposite: styled.ThemedStyledFunction<"feComposite", any, {}, never>;
export declare let feConvolveMatrix: styled.ThemedStyledFunction<"feConvolveMatrix", any, {}, never>;
export declare let feDiffuseLighting: styled.ThemedStyledFunction<"feDiffuseLighting", any, {}, never>;
export declare let feDisplacementMap: styled.ThemedStyledFunction<"feDisplacementMap", any, {}, never>;
export declare let feDistantLight: styled.ThemedStyledFunction<"feDistantLight", any, {}, never>;
export declare let feDropShadow: styled.ThemedStyledFunction<"feDropShadow", any, {}, never>;
export declare let feFlood: styled.ThemedStyledFunction<"feFlood", any, {}, never>;
export declare let feFuncA: styled.ThemedStyledFunction<"feFuncA", any, {}, never>;
export declare let feFuncB: styled.ThemedStyledFunction<"feFuncB", any, {}, never>;
export declare let feFuncG: styled.ThemedStyledFunction<"feFuncG", any, {}, never>;
export declare let feFuncR: styled.ThemedStyledFunction<"feFuncR", any, {}, never>;
export declare let feGaussianBlur: styled.ThemedStyledFunction<"feGaussianBlur", any, {}, never>;
export declare let feImage: styled.ThemedStyledFunction<"feImage", any, {}, never>;
export declare let feMerge: styled.ThemedStyledFunction<"feMerge", any, {}, never>;
export declare let feMergeNode: styled.ThemedStyledFunction<"feMergeNode", any, {}, never>;
export declare let feMorphology: styled.ThemedStyledFunction<"feMorphology", any, {}, never>;
export declare let feOffset: styled.ThemedStyledFunction<"feOffset", any, {}, never>;
export declare let fePointLight: styled.ThemedStyledFunction<"fePointLight", any, {}, never>;
export declare let feSpecularLighting: styled.ThemedStyledFunction<"feSpecularLighting", any, {}, never>;
export declare let feSpotLight: styled.ThemedStyledFunction<"feSpotLight", any, {}, never>;
export declare let feTile: styled.ThemedStyledFunction<"feTile", any, {}, never>;
export declare let feTurbulence: styled.ThemedStyledFunction<"feTurbulence", any, {}, never>;
export declare let fieldset: styled.ThemedStyledFunction<"fieldset", any, {}, never>;
export declare let figcaption: styled.ThemedStyledFunction<"figcaption", any, {}, never>;
export declare let figure: styled.ThemedStyledFunction<"figure", any, {}, never>;
export declare let filter: styled.ThemedStyledFunction<"filter", any, {}, never>;
export declare let footer: styled.ThemedStyledFunction<"footer", any, {}, never>;
export declare let foreignObject: styled.ThemedStyledFunction<"foreignObject", any, {}, never>;
export declare let form: styled.ThemedStyledFunction<"form", any, {}, never>;
export declare let g: styled.ThemedStyledFunction<"g", any, {}, never>;
export declare let h1: styled.ThemedStyledFunction<"h1", any, {}, never>;
export declare let h2: styled.ThemedStyledFunction<"h2", any, {}, never>;
export declare let h3: styled.ThemedStyledFunction<"h3", any, {}, never>;
export declare let h4: styled.ThemedStyledFunction<"h4", any, {}, never>;
export declare let h5: styled.ThemedStyledFunction<"h5", any, {}, never>;
export declare let h6: styled.ThemedStyledFunction<"h6", any, {}, never>;
export declare let head: styled.ThemedStyledFunction<"head", any, {}, never>;
export declare let header: styled.ThemedStyledFunction<"header", any, {}, never>;
export declare let hgroup: styled.ThemedStyledFunction<"hgroup", any, {}, never>;
export declare let hr: styled.ThemedStyledFunction<"hr", any, {}, never>;
export declare let html: styled.ThemedStyledFunction<"html", any, {}, never>;
export declare let i: styled.ThemedStyledFunction<"i", any, {}, never>;
export declare let iframe: styled.ThemedStyledFunction<"iframe", any, {}, never>;
export declare let image: styled.ThemedStyledFunction<"image", any, {}, never>;
export declare let img: styled.ThemedStyledFunction<"img", any, {}, never>;
export declare let input: styled.ThemedStyledFunction<"input", any, {}, never>;
export declare let ins: styled.ThemedStyledFunction<"ins", any, {}, never>;
export declare let kbd: styled.ThemedStyledFunction<"kbd", any, {}, never>;
export declare let keygen: styled.ThemedStyledFunction<"keygen", any, {}, never>;
export declare let label: styled.ThemedStyledFunction<"label", any, {}, never>;
export declare let legend: styled.ThemedStyledFunction<"legend", any, {}, never>;
export declare let li: styled.ThemedStyledFunction<"li", any, {}, never>;
export declare let line: styled.ThemedStyledFunction<"line", any, {}, never>;
export declare let linearGradient: styled.ThemedStyledFunction<"linearGradient", any, {}, never>;
export declare let link: styled.ThemedStyledFunction<"link", any, {}, never>;
export declare let main: styled.ThemedStyledFunction<"main", any, {}, never>;
export declare let map: styled.ThemedStyledFunction<"map", any, {}, never>;
export declare let mark: styled.ThemedStyledFunction<"mark", any, {}, never>;
export declare let marker: styled.ThemedStyledFunction<"marker", any, {}, never>;
export declare let mask: styled.ThemedStyledFunction<"mask", any, {}, never>;
export declare let menu: styled.ThemedStyledFunction<"menu", any, {}, never>;
export declare let menuitem: styled.ThemedStyledFunction<"menuitem", any, {}, never>;
export declare let meta: styled.ThemedStyledFunction<"meta", any, {}, never>;
export declare let metadata: styled.ThemedStyledFunction<"metadata", any, {}, never>;
export declare let meter: styled.ThemedStyledFunction<"meter", any, {}, never>;
export declare let mpath: styled.ThemedStyledFunction<"mpath", any, {}, never>;
export declare let nav: styled.ThemedStyledFunction<"nav", any, {}, never>;
export declare let noindex: styled.ThemedStyledFunction<"noindex", any, {}, never>;
export declare let noscript: styled.ThemedStyledFunction<"noscript", any, {}, never>;
export declare let object: styled.ThemedStyledFunction<"object", any, {}, never>;
export declare let ol: styled.ThemedStyledFunction<"ol", any, {}, never>;
export declare let optgroup: styled.ThemedStyledFunction<"optgroup", any, {}, never>;
export declare let option: styled.ThemedStyledFunction<"option", any, {}, never>;
export declare let output: styled.ThemedStyledFunction<"output", any, {}, never>;
export declare let p: styled.ThemedStyledFunction<"p", any, {}, never>;
export declare let param: styled.ThemedStyledFunction<"param", any, {}, never>;
export declare let path: styled.ThemedStyledFunction<"path", any, {}, never>;
export declare let pattern: styled.ThemedStyledFunction<"pattern", any, {}, never>;
export declare let picture: styled.ThemedStyledFunction<"picture", any, {}, never>;
export declare let polygon: styled.ThemedStyledFunction<"polygon", any, {}, never>;
export declare let polyline: styled.ThemedStyledFunction<"polyline", any, {}, never>;
export declare let pre: styled.ThemedStyledFunction<"pre", any, {}, never>;
export declare let progress: styled.ThemedStyledFunction<"progress", any, {}, never>;
export declare let q: styled.ThemedStyledFunction<"q", any, {}, never>;
export declare let radialGradient: styled.ThemedStyledFunction<"radialGradient", any, {}, never>;
export declare let rect: styled.ThemedStyledFunction<"rect", any, {}, never>;
export declare let rp: styled.ThemedStyledFunction<"rp", any, {}, never>;
export declare let rt: styled.ThemedStyledFunction<"rt", any, {}, never>;
export declare let ruby: styled.ThemedStyledFunction<"ruby", any, {}, never>;
export declare let s: styled.ThemedStyledFunction<"s", any, {}, never>;
export declare let samp: styled.ThemedStyledFunction<"samp", any, {}, never>;
export declare let script: styled.ThemedStyledFunction<"script", any, {}, never>;
export declare let section: styled.ThemedStyledFunction<"section", any, {}, never>;
export declare let select: styled.ThemedStyledFunction<"select", any, {}, never>;
export declare let slot: styled.ThemedStyledFunction<"slot", any, {}, never>;
export declare let small: styled.ThemedStyledFunction<"small", any, {}, never>;
export declare let source: styled.ThemedStyledFunction<"source", any, {}, never>;
export declare let span: styled.ThemedStyledFunction<"span", any, {}, never>;
export declare let stop: styled.ThemedStyledFunction<"stop", any, {}, never>;
export declare let strong: styled.ThemedStyledFunction<"strong", any, {}, never>;
export declare let style: styled.ThemedStyledFunction<"style", any, {}, never>;
export declare let sub: styled.ThemedStyledFunction<"sub", any, {}, never>;
export declare let summary: styled.ThemedStyledFunction<"summary", any, {}, never>;
export declare let sup: styled.ThemedStyledFunction<"sup", any, {}, never>;
export declare let svg: styled.ThemedStyledFunction<"svg", any, {}, never>;
export declare let symbol: styled.ThemedStyledFunction<"symbol", any, {}, never>;
export declare let table: styled.ThemedStyledFunction<"table", any, {}, never>;
export declare let tbody: styled.ThemedStyledFunction<"tbody", any, {}, never>;
export declare let td: styled.ThemedStyledFunction<"td", any, {}, never>;
export declare let template: styled.ThemedStyledFunction<"template", any, {}, never>;
export declare let text: styled.ThemedStyledFunction<"text", any, {}, never>;
export declare let textPath: styled.ThemedStyledFunction<"textPath", any, {}, never>;
export declare let textarea: styled.ThemedStyledFunction<"textarea", any, {}, never>;
export declare let tfoot: styled.ThemedStyledFunction<"tfoot", any, {}, never>;
export declare let th: styled.ThemedStyledFunction<"th", any, {}, never>;
export declare let thead: styled.ThemedStyledFunction<"thead", any, {}, never>;
export declare let time: styled.ThemedStyledFunction<"time", any, {}, never>;
export declare let title: styled.ThemedStyledFunction<"title", any, {}, never>;
export declare let tr: styled.ThemedStyledFunction<"tr", any, {}, never>;
export declare let track: styled.ThemedStyledFunction<"track", any, {}, never>;
export declare let tspan: styled.ThemedStyledFunction<"tspan", any, {}, never>;
export declare let u: styled.ThemedStyledFunction<"u", any, {}, never>;
export declare let ul: styled.ThemedStyledFunction<"ul", any, {}, never>;
export declare let use: styled.ThemedStyledFunction<"use", any, {}, never>;
export declare let video: styled.ThemedStyledFunction<"video", any, {}, never>;
export declare let view: styled.ThemedStyledFunction<"view", any, {}, never>;
export declare let wbr: styled.ThemedStyledFunction<"wbr", any, {}, never>;
export declare let webview: styled.ThemedStyledFunction<"webview", any, {}, never>;
